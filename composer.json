{
    "name": "brianhenryie/strauss",
    "description": "Composes all dependencies as a package inside a WordPress plugin",
    "authors": [
        {
            "name": "Brian Henry",
            "email": "BrianHenryIE@gmail.com"
        },
        {
            "name": "Coen Jacobs",
            "email": "coenjacobs@gmail.com"
        }
    ],
    "bin": ["bin/strauss"],
    "minimum-stability": "dev",
    "prefer-stable": true,
    "license": "MIT",
    "require": {
        "composer/composer": "*",
        "json-mapper/json-mapper": "^2.2",
        "symfony/console": "^4|^5|^6|^7",
        "symfony/finder": "^4|^5|^6|^7",
        "league/flysystem": "^2.1|^3.0",
        "nikic/php-parser": "^4.19"
    },
    "autoload": {
        "psr-4": {
            "BrianHenryIE\\Strauss\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "BrianHenryIE\\Strauss\\Tests\\": "tests/",
            "BrianHenryIE\\Strauss\\": "tests/"
        }
    },
    "require-dev": {
        "clue/phar-composer": "^1.2",
        "ext-json": "*",
        "jaschilz/php-coverage-badger": "^2.0",
        "mheap/phpunit-github-actions-printer": "^1.4",
        "php": "^7.4|^8.0",
        "phpunit/phpunit": "^9|^10",
        "squizlabs/php_codesniffer": "^3.5",
        "phpstan/phpstan": "^1.10",
        "mockery/mockery": "^1.6"
    },
    "scripts": {
        "post-install-cmd": [
            "@install-phive-dependencies"
        ],
        "post-update-cmd": [
            "@install-phive-dependencies"
        ],
        "cs": [
            "phpcs",
            "phpstan"
        ],
        "install-phive-dependencies": [
            "if [ -z \"$(command -v phive)\" ]; then echo \"Phive is not installed. Run 'brew install gpg phive' or see https://phar.io/.\"; exit 1; fi;",
            "phive install"
        ],
        "cs-fix": [
            "phpcbf || true",
            "@cs"
        ],
        "test": [
            "phpunit"
        ],
        "test-changes": [
            "if [ -z \"$(command -v ./tools/php-diff-test)\" ]; then echo \"Please install 'php-diff-test' with 'phive install'.\"; exit 1; fi;",
            "if [ \"$XDEBUG_MODE\" != \"coverage\" ]; then echo 'Run with XDEBUG_MODE=coverage composer test-changes'; exit 1; fi;",
            "phpunit --filter=\"$(./tools/php-diff-test filter --input-files tests/_reports/php.cov --granularity=line)\" --coverage-text;"
        ],
        "test-changes-report": [
            "if [ -z \"$(command -v ./tools/php-diff-test)\" ]; then echo \"Please install 'php-diff-test' with 'phive install'.\"; exit 1; fi;",
            "if [ -z \"$(command -v ./tools/phpcov)\" ]; then echo \"Please install 'phpcov' with 'phive install'.\"; exit 1; fi;",
            "if [ \"$XDEBUG_MODE\" != \"coverage\" ]; then echo 'Run with XDEBUG_MODE=coverage composer test-changes-report'; exit 1; fi;",
            "if [ -d \"tests/_reports/diff\" ]; then rm -rf tests/_reports/diff; fi;",
            "phpunit --filter=\"$(./tools/php-diff-test filter --input-files tests/_reports/php.cov --granularity file)\" --coverage-text --coverage-php tests/_reports/diff/php.cov -d memory_limit=-1;",
            "./tools/php-diff-test coverage --input-files tests/_reports/diff/php.cov --output-file tests/_reports/diff/php.cov;",
            "./tools/phpcov merge tests/_reports/diff --html tests/_reports/diff/html;",
            "open tests/_reports/diff/html/index.html"
        ],
        "test-coverage": [
            "Composer\\Config::disableProcessTimeout",
            "if [ \"$XDEBUG_MODE\" != \"coverage\" ]; then echo \"Run with 'XDEBUG_MODE=coverage composer test-coverage'\"; exit 1; fi;",
            "phpunit --coverage-text --coverage-html tests/_reports/html --coverage-clover tests/_reports/clover.xml --coverage-php tests/_reports/php.cov -d memory_limit=-1 --order-by=random",
            "php-coverage-badger tests/_reports/clover.xml .github/coverage.svg",
            "if [ $(command -v ./tools/phpcov) ]; then git diff master...head > /tmp/master.diff; ./tools/phpcov patch-coverage --path-prefix $(pwd) ./tests/_reports/php.cov /tmp/master.diff || true; fi;",
            "# Run 'open ./tests/_reports/html/index.html' to view report."
        ]
    },
    "scripts-descriptions": {
        "test-changes": "Run PHPUnit only on lines that have changed in master...HEAD",
        "test-changes-report": "Run PHPUnit only on files that have changed in master...HEAD and display the HTML report.",
        "test-coverage": "Run PHPUnit tests with coverage. Use 'XDEBUG_MODE=coverage composer test-coverage' to run, 'open ./tests/_reports/html/index.html' to view."
    },
    "replace":{
        "coenjacobs/mozart": "*"
    }
}
